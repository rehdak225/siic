{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createStackNavigator, HeaderBackButton } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { connect } from \"react-redux\";\nimport Landing from \"../sub/landing\";\nimport AccountTab from \"../tabs/accountTab\";\nimport CardsTab from \"../tabs/cardsTab\";\nimport HelpTab from \"../tabs/helpTab\";\nimport StatisticsTab from \"../tabs/statisticsTab\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar height = Math.round(Dimensions.get(\"window\").height);\nvar width = Math.round(Dimensions.get(\"window\").width);\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n\n    _this.drawerOpen = function () {\n      return _this.props.navigation.openDrawer();\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var tabBarOptions = {\n        activeTintColor: \"#E84E1C\",\n        inactiveTintColor: \"black\",\n        indicatorStyle: {\n          backgroundColor: \"red\",\n          height: \"100%\"\n        },\n        pressOpacity: 1,\n        pressColor: \"#9BC9E2\",\n        style: {\n          backgroundColor: \"#ffffff\",\n          borderRadius: 36,\n          margin: 24,\n          height: 76,\n          width: \"90%\"\n        }\n      };\n      return _jsx(NavigationContainer, {\n        independent: true,\n        children: _jsxs(Tab.Navigator, {\n          tabBarOptions: tabBarOptions,\n          children: [_jsx(Tab.Screen, {\n            name: \"accountTab\",\n            component: AccountTab,\n            options: {\n              tabBarIcon: function tabBarIcon(_ref) {\n                var color = _ref.color;\n                return _jsx(Image, {\n                  source: require(\"../../../../assets/images/Tabs/Account.png\")\n                });\n              },\n              tabBarLabel: \"Home\",\n              headerShown: null,\n              headerStyle: {\n                backgroundColor: \"#F6F7FB\"\n              }\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"statisticsTab\",\n            component: StatisticsTab,\n            options: {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var color = _ref2.color;\n                return _jsx(Image, {\n                  source: require(\"../../../../assets/images/Tabs/Stat.png\")\n                });\n              },\n              tabBarLabel: \"Statistics\",\n              headerShown: null,\n              headerStyle: {\n                backgroundColor: \"#F6F7FB\"\n              }\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"cardsTab\",\n            component: CardsTab,\n            options: {\n              tabBarIcon: function tabBarIcon(_ref3) {\n                var color = _ref3.color;\n                return _jsx(Image, {\n                  source: require(\"../../../../assets/images/Tabs/Cards.png\")\n                });\n              },\n              tabBarLabel: \"Cards\",\n              headerShown: null,\n              headerStyle: {\n                backgroundColor: \"#F6F7FB\"\n              }\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"helpTab\",\n            component: HelpTab,\n            options: {\n              tabBarIcon: function tabBarIcon(_ref4) {\n                var color = _ref4.color;\n                return _jsx(Image, {\n                  source: require(\"../../../../assets/images/Tabs/help.png\")\n                });\n              },\n              tabBarLabel: \"Help\",\n              headerShown: null,\n              headerStyle: {\n                backgroundColor: \"#F6F7FB\"\n              }\n            }\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    tok: state.token\n  };\n};\n\nvar mapDispatchStoreToProps = function mapDispatchStoreToProps(dispatch) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchStoreToProps)(Home);","map":{"version":3,"sources":["C:/Users/PC GAMING/Desktop/Kadher/boiler_plate_rn/src/components/screens/menu/home.js"],"names":["React","Component","createStackNavigator","HeaderBackButton","NavigationContainer","createBottomTabNavigator","connect","Landing","AccountTab","CardsTab","HelpTab","StatisticsTab","height","Math","round","Dimensions","get","width","Stack","Tab","Home","state","drawerOpen","props","navigation","openDrawer","tabBarOptions","activeTintColor","inactiveTintColor","indicatorStyle","backgroundColor","pressOpacity","pressColor","style","borderRadius","margin","tabBarIcon","color","require","tabBarLabel","headerShown","headerStyle","mapStateToProps","user","tok","token","mapDispatchStoreToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  Dimensions,\n  StyleSheet,\n  ActivityIndicator,\n  Image\n} from \"react-native\";\n// import Modal from \"react-native-modal\";\n// import BottomSheet from \"reanimated-bottom-sheet\";\nimport {\n  createStackNavigator,\n  HeaderBackButton\n} from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { connect } from \"react-redux\";\nimport Landing from \"../sub/landing\";\nimport AccountTab from \"../tabs/accountTab\";\nimport CardsTab from \"../tabs/cardsTab\";\nimport HelpTab from \"../tabs/helpTab\";\nimport StatisticsTab from \"../tabs/statisticsTab\";\n//import EmergencyScreen from \"../sub/emergency\";\n//import AddressScreen from \"../sub/address\";\n//import TravelHistoric from \"../sub/travel-historic\";\n\nconst height = Math.round(Dimensions.get(\"window\").height);\nconst width = Math.round(Dimensions.get(\"window\").width);\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nclass Home extends Component {\n  state = {};\n\n  drawerOpen = () => {\n    return this.props.navigation.openDrawer();\n  };\n\n  render() {\n    const tabBarOptions = {\n      activeTintColor: \"#E84E1C\",\n      inactiveTintColor: \"black\",\n      indicatorStyle: { backgroundColor: \"red\", height: \"100%\" },\n      pressOpacity: 1,\n      pressColor: \"#9BC9E2\",\n      style: {\n        backgroundColor: \"#ffffff\",\n        borderRadius: 36,\n        margin: 24,\n        height: 76,\n        width: \"90%\"\n      }\n    };\n\n    return (\n      <NavigationContainer independent={true}>\n        <Tab.Navigator tabBarOptions={tabBarOptions}>\n          <Tab.Screen\n            name=\"accountTab\"\n            component={AccountTab}\n            options={{\n              tabBarIcon: ({ color }) => (\n                <Image\n                  source={require(\"../../../../assets/images/Tabs/Account.png\")}\n                />\n              ),\n              tabBarLabel: \"Home\",\n              headerShown: null,\n              headerStyle: {\n                backgroundColor: \"#F6F7FB\"\n              }\n            }}\n          />\n          <Tab.Screen\n            name=\"statisticsTab\"\n            component={StatisticsTab}\n            options={{\n              tabBarIcon: ({ color }) => (\n                <Image\n                  source={require(\"../../../../assets/images/Tabs/Stat.png\")}\n                />\n              ),\n              tabBarLabel: \"Statistics\",\n              headerShown: null,\n              headerStyle: {\n                backgroundColor: \"#F6F7FB\"\n              }\n            }}\n          />\n          <Tab.Screen\n            name=\"cardsTab\"\n            component={CardsTab}\n            options={{\n              tabBarIcon: ({ color }) => (\n                <Image\n                  source={require(\"../../../../assets/images/Tabs/Cards.png\")}\n                />\n              ),\n              tabBarLabel: \"Cards\",\n              headerShown: null,\n              headerStyle: {\n                backgroundColor: \"#F6F7FB\"\n              }\n            }}\n          />\n          <Tab.Screen\n            name=\"helpTab\"\n            component={HelpTab}\n            options={{\n              tabBarIcon: ({ color }) => (\n                <Image\n                  source={require(\"../../../../assets/images/Tabs/help.png\")}\n                />\n              ),\n              tabBarLabel: \"Help\",\n              headerShown: null,\n              headerStyle: {\n                backgroundColor: \"#F6F7FB\"\n              }\n            }}\n          />\n        </Tab.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    tok: state.token\n  };\n};\n\nconst mapDispatchStoreToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchStoreToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}