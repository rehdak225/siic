{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport \"react-native-gesture-handler\";\nimport { legacy_createStore as createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { createLogger } from \"redux-logger\";\nimport createSecureStore from \"redux-persist-expo-securestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport storage from \"redux-persist/lib/storage\";\nimport { reducer } from \"./store/reducers\";\nimport Navigation from \"./src/components/navigation\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport * as Font from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage\n};\nvar persistedReducer = persistReducer(persistConfig, reducer);\nvar store = createStore(persistedReducer, applyMiddleware(createLogger()));\nvar persistedStore = persistStore(store);\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fontsLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadFonts\",\n    value: function loadFonts() {\n      return _regeneratorRuntime.async(function loadFonts$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                Pacifico: require(\"./assets/fonts/Pacifico.ttf\")\n              }));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadFonts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.fontsLoaded) {\n        return _jsx(Provider, {\n          store: store,\n          children: _jsx(PersistGate, {\n            persistor: persistedStore,\n            loading: null,\n            children: _jsx(PaperProvider, {\n              children: _jsx(Navigation, {})\n            })\n          })\n        });\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/PC GAMING/Desktop/Kadher/boiler_plate_rn/App.js"],"names":["React","Component","useState","legacy_createStore","createStore","applyMiddleware","Provider","persistStore","persistReducer","createLogger","createSecureStore","AsyncStorage","PersistGate","PaperProvider","storage","reducer","Navigation","Icon","Font","persistConfig","key","persistedReducer","store","persistedStore","App","state","fontsLoaded","loadAsync","Pacifico","require","setState","loadFonts"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,OAAO,8BAAP;AAIA,SAASC,kBAAkB,IAAIC,WAA/B,EAA4CC,eAA5C,QAAmE,OAAnE;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASN,QAAQ,IAAIO,aAArB,QAA0C,oBAA1C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,OAAT;AAGA,OAAOC,UAAP;AACA,OAAOC,IAAP;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;;AAIA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBN,EAAAA,OAAO,EAAEH;AAFW,CAAtB;AAKA,IAAMU,gBAAgB,GAAGb,cAAc,CAACW,aAAD,EAAgBJ,OAAhB,CAAvC;AAEA,IAAMO,KAAK,GAAGlB,WAAW,CAACiB,gBAAD,EAAmBhB,eAAe,CAACI,YAAY,EAAb,CAAlC,CAAzB;AAEA,IAAMc,cAAc,GAAGhB,YAAY,CAACe,KAAD,CAAnC;;IAEME,G;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE;AADP,K;;;;;;WAIR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACQR,IAAI,CAACS,SAAL,CAAe;AAEnBC,gBAAAA,QAAQ,EAAEC,OAAO;AAFE,eAAf,CADR;;AAAA;AAKE,mBAAKC,QAAL,CAAc;AAAEJ,gBAAAA,WAAW,EAAE;AAAf,eAAd;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAQA,6BAAoB;AAClB,WAAKK,SAAL;AACD;;;WAED,kBAAS;AACP,UAAI,KAAKN,KAAL,CAAWC,WAAf,EAA4B;AAC1B,eACE,KAAC,QAAD;AAAU,UAAA,KAAK,EAAEJ,KAAjB;AAAA,oBACE,KAAC,WAAD;AAAa,YAAA,SAAS,EAAEC,cAAxB;AAAwC,YAAA,OAAO,EAAE,IAAjD;AAAA,sBACE,KAAC,aAAD;AAAA,wBACE,KAAC,UAAD;AADF;AADF;AADF,UADF;AASD,OAVD,MAUO;AACL,eAAO,IAAP;AACD;AACF;;;;EA/BetB,S;;AAkClB,eAAeuB,GAAf","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { StyleSheet, Text, View, ScrollView } from \"react-native\";\nimport \"react-native-gesture-handler\";\n//reducer importation\n\n//Redux implemnentation\nimport { legacy_createStore as createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { createLogger } from \"redux-logger\";\nimport createSecureStore from \"redux-persist-expo-securestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport storage from \"redux-persist/lib/storage\";\nimport { reducer } from \"./store/reducers\";\n\n// import Tabs from \"./components/tabs\";\nimport Navigation from \"./src/components/navigation\";\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\n\nimport * as Font from \"expo-font\";\n// const storage = createSecureStore();\n// AsyncStorage.clear();\n\nconst persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = createStore(persistedReducer, applyMiddleware(createLogger()));\n\nconst persistedStore = persistStore(store);\n\nclass App extends Component {\n  state = {\n    fontsLoaded: false\n  };\n\n  async loadFonts() {\n    await Font.loadAsync({\n      // Load a font `Montserrat` from a static resource\n      Pacifico: require(\"./assets/fonts/Pacifico.ttf\")\n    });\n    this.setState({ fontsLoaded: true });\n  }\n\n  componentDidMount() {\n    this.loadFonts();\n  }\n\n  render() {\n    if (this.state.fontsLoaded) {\n      return (\n        <Provider store={store}>\n          <PersistGate persistor={persistedStore} loading={null}>\n            <PaperProvider>\n              <Navigation />\n            </PaperProvider>\n          </PersistGate>\n        </Provider>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}