{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from \"react\";\nimport * as EmailValidator from \"email-validator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Home from \"./screens/menu/home\";\nimport socketIOClient from \"socket.io-client\";\nimport { colors } from \"../constants/colors\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Math.round(Dimensions.get(\"window\").width);\nvar height = Math.round(Dimensions.get(\"window\").height);\n\nvar Tabs = function (_Component) {\n  _inherits(Tabs, _Component);\n\n  var _super = _createSuper(Tabs);\n\n  function Tabs() {\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      modalVisible: false\n    };\n\n    _this.setModalVisible = function (visible) {\n      _this.setState({\n        modalVisible: visible\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: {\n          flex: 1\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.setModalVisible(true);\n          },\n          children: _jsx(Image, {\n            source: require(\"../../assets/images/eva_menu-fill.png\")\n          })\n        }), _jsx(Modal, {\n          animationType: \"slideInLeft\",\n          transparent: true,\n          visible: this.state.modalVisible,\n          onRequestClose: function onRequestClose() {\n            Alert.alert(\"Modal has been closed.\");\n\n            _this2.setModalVisible(!modalVisible);\n          },\n          children: _jsxs(View, {\n            style: {\n              alignItems: \"flex-start\"\n            },\n            children: [_jsx(View, {\n              style: {\n                height: \"100%\",\n                width: \"80%\",\n                marginTop: \"auto\"\n              },\n              children: _jsx(View, {\n                style: {\n                  flex: 1,\n                  backgroundColor: \"white\",\n                  bottom: 0,\n                  left: 0,\n                  right: 0,\n                  zIndex: 10,\n                  borderTopRightRadius: 30,\n                  borderTopLeftRadius: 30\n                },\n                children: _jsx(View, {\n                  style: {\n                    paddingLeft: 15\n                  }\n                })\n              })\n            }), _jsx(Pressable, {\n              onPress: function onPress() {\n                _this2.setModalVisible(false);\n              },\n              style: {\n                position: \"absolute\",\n                right: 0,\n                top: 0,\n                width: \"20%\",\n                height: \"100%\",\n                backgroundColor: \"rgba(52, 52, 52, 0)\"\n              }\n            })]\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Tabs;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.token\n  };\n};\n\nvar mapDispatchStoreToProps = function mapDispatchStoreToProps(dispatch) {\n  return {};\n};\n\nvar tabs = new Tabs();\nexport default connect(mapStateToProps, mapDispatchStoreToProps)(Tabs);","map":{"version":3,"sources":["C:/Users/PC GAMING/Desktop/Kadher/boiler_plate_rn/src/components/tabs.js"],"names":["React","Component","useState","EmailValidator","TextInput","Button","NavigationContainer","connect","Axios","Ionicons","Home","socketIOClient","colors","TouchableOpacity","width","Math","round","Dimensions","get","height","Tabs","state","modalVisible","setModalVisible","visible","setState","flex","require","Alert","alert","alignItems","marginTop","backgroundColor","bottom","left","right","zIndex","borderTopRightRadius","borderTopLeftRadius","paddingLeft","position","top","mapStateToProps","token","mapDispatchStoreToProps","dispatch","tabs"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport * as EmailValidator from \"email-validator\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  Image,\n  Dimensions,\n  Modal,\n  Pressable\n} from \"react-native\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport Home from \"./screens/menu/home\";\nimport socketIOClient from \"socket.io-client\";\nimport { colors } from \"../constants/colors\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst width = Math.round(Dimensions.get(\"window\").width);\nconst height = Math.round(Dimensions.get(\"window\").height);\n\nclass Tabs extends Component {\n  // constructor() {cette classe me sert à faire des requêtes ajax\n  //   super();\n\n  // }\n\n  /*\n\n  */\n\n  state = {\n    modalVisible: false\n  };\n\n  setModalVisible = (visible) => {\n    this.setState({ modalVisible: visible });\n  };\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <View style={{ flex: 1 }}>\n        <TouchableOpacity\n          onPress={() => {\n            this.setModalVisible(true);\n          }}\n        >\n          <Image source={require(\"../../assets/images/eva_menu-fill.png\")} />\n        </TouchableOpacity>\n\n        <Modal\n          animationType=\"slideInLeft\"\n          transparent={true}\n          visible={this.state.modalVisible}\n          onRequestClose={() => {\n            Alert.alert(\"Modal has been closed.\");\n            this.setModalVisible(!modalVisible);\n          }}\n        >\n          <View style={{ alignItems: \"flex-start\" }}>\n            <View\n              style={{\n                height: \"100%\",\n                width: \"80%\",\n                marginTop: \"auto\"\n              }}\n            >\n              <View\n                style={{\n                  flex: 1,\n                  backgroundColor: \"white\",\n                  bottom: 0,\n                  left: 0,\n                  right: 0,\n                  zIndex: 10,\n                  borderTopRightRadius: 30,\n                  borderTopLeftRadius: 30\n                }}\n              >\n                <View style={{ paddingLeft: 15 }}></View>\n              </View>\n            </View>\n\n            <Pressable\n              onPress={() => {\n                this.setModalVisible(false);\n              }}\n              style={{\n                position: \"absolute\",\n                right: 0,\n                top: 0,\n                width: \"20%\",\n                height: \"100%\",\n                backgroundColor: \"rgba(52, 52, 52, 0)\"\n              }}\n            ></Pressable>\n          </View>\n        </Modal>\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // Id: state.user.Id\n    token: state.token\n  };\n};\n\nconst mapDispatchStoreToProps = (dispatch) => {\n  return {};\n};\n\nconst tabs = new Tabs();\nexport default connect(mapStateToProps, mapDispatchStoreToProps)(Tabs);\n"]},"metadata":{},"sourceType":"module"}