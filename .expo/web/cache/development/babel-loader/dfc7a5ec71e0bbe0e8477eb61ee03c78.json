{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport PropTypes from 'prop-types';\nimport data from \"./Countries\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar IntlPhoneInput = function (_React$Component) {\n  _inherits(IntlPhoneInput, _React$Component);\n\n  var _super = _createSuper(IntlPhoneInput);\n\n  function IntlPhoneInput(props) {\n    var _this;\n\n    _classCallCheck(this, IntlPhoneInput);\n\n    _this = _super.call(this, props);\n\n    _this.onChangePropText = function (unmaskedPhoneNumber, phoneNumber) {\n      var _this$state = _this.state,\n          dialCode = _this$state.dialCode,\n          mask = _this$state.mask,\n          selectedCountry = _this$state.selectedCountry;\n      var countOfNumber = mask.match(/9/g).length;\n\n      if (_this.props.onChangeText) {\n        var isVerified = countOfNumber === (unmaskedPhoneNumber == null ? void 0 : unmaskedPhoneNumber.length) && (phoneNumber == null ? void 0 : phoneNumber.length) > 0;\n\n        _this.props.onChangeText({\n          dialCode: dialCode,\n          unmaskedPhoneNumber: unmaskedPhoneNumber,\n          phoneNumber: phoneNumber,\n          isVerified: isVerified,\n          selectedCountry: selectedCountry\n        });\n      }\n    };\n\n    _this.onChangeText = function (value) {\n      var unmaskedPhoneNumber = (value.match(/\\d+/g) || []).join('');\n\n      if (unmaskedPhoneNumber.length === 0) {\n        _this.setState({\n          phoneNumber: ''\n        });\n\n        _this.onChangePropText('', '');\n\n        return;\n      }\n\n      var phoneNumber = _this.state.mask.replace(/9/g, '_');\n\n      for (var index = 0; index < unmaskedPhoneNumber.length; index += 1) {\n        phoneNumber = phoneNumber.replace('_', unmaskedPhoneNumber[index]);\n      }\n\n      var numberPointer = 0;\n\n      for (var _index = phoneNumber.length; _index > 0; _index -= 1) {\n        if (phoneNumber[_index] !== ' ' && !isNaN(phoneNumber[_index])) {\n          numberPointer = _index;\n          break;\n        }\n      }\n\n      phoneNumber = phoneNumber.slice(0, numberPointer + 1);\n      unmaskedPhoneNumber = (phoneNumber.match(/\\d+/g) || []).join('');\n\n      _this.onChangePropText(unmaskedPhoneNumber, phoneNumber);\n\n      _this.setState({\n        phoneNumber: phoneNumber\n      });\n    };\n\n    _this.showModal = function () {\n      return _this.props.disableCountryChange ? null : _this.setState({\n        modalVisible: true\n      });\n    };\n\n    _this.hideModal = function () {\n      return _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.onCountryChange = function _callee(code) {\n      var countryData, country, defaultCountry;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(data);\n\n            case 2:\n              countryData = _context.sent;\n              _context.prev = 3;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(countryData.filter(function (obj) {\n                return obj.code === code;\n              })[0]);\n\n            case 6:\n              country = _context.sent;\n\n              _this.setState({\n                dialCode: country.dialCode,\n                flag: country.flag,\n                mask: _this.props.mask || country.mask,\n                phoneNumber: '',\n                selectedCountry: country\n              });\n\n              _this.hideModal();\n\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n              defaultCountry = _this.state.defaultCountry;\n\n              _this.setState({\n                dialCode: defaultCountry.dialCode,\n                flag: defaultCountry.flag,\n                mask: _this.props.mask || defaultCountry.mask,\n                phoneNumber: '',\n                selectedCountry: defaultCountry\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[3, 11]], Promise);\n    };\n\n    _this.filterCountries = function (value) {\n      var lang = _this.props.lang;\n      var countryData = data.filter(function (obj) {\n        var _obj, _lang$toLowerCase;\n\n        return ((_obj = obj[(_lang$toLowerCase = lang == null ? void 0 : lang.toLowerCase()) != null ? _lang$toLowerCase : \"en\"]) == null ? void 0 : _obj.indexOf(value)) > -1 || obj.dialCode.indexOf(value) > -1;\n      });\n\n      _this.setState({\n        countryData: countryData\n      });\n    };\n\n    _this.renderModal = function () {\n      if (_this.props.customModal) return _this.props.customModal(_this.state.modalVisible, _this.state.countryData, _this.onCountryChange);\n      var _this$props = _this.props,\n          countryModalStyle = _this$props.countryModalStyle,\n          modalContainer = _this$props.modalContainer,\n          modalFlagStyle = _this$props.modalFlagStyle,\n          filterInputStyle = _this$props.filterInputStyle,\n          modalCountryItemCountryNameStyle = _this$props.modalCountryItemCountryNameStyle,\n          modalCountryItemCountryDialCodeStyle = _this$props.modalCountryItemCountryDialCodeStyle,\n          closeText = _this$props.closeText,\n          filterText = _this$props.filterText,\n          searchIconStyle = _this$props.searchIconStyle,\n          closeButtonStyle = _this$props.closeButtonStyle,\n          lang = _this$props.lang,\n          placeholderTextColor = _this$props.placeholderTextColor;\n      return _jsx(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: _this.state.modalVisible,\n        children: _jsxs(SafeAreaView, {\n          style: {\n            flex: 1\n          },\n          children: [_jsxs(View, {\n            style: [styles.modalContainer, modalContainer],\n            children: [_jsxs(View, {\n              style: styles.filterInputStyleContainer,\n              children: [_jsx(TextInput, {\n                autoCapitalize: \"words\",\n                autoFocus: true,\n                onChangeText: _this.filterCountries,\n                placeholder: filterText || 'Filter',\n                style: [styles.filterInputStyle, filterInputStyle],\n                placeholderTextColor: placeholderTextColor\n              }), _jsx(Text, {\n                style: [styles.searchIconStyle, searchIconStyle],\n                children: \"\\uD83D\\uDD0D\"\n              })]\n            }), _jsx(FlatList, {\n              style: {\n                flex: 1\n              },\n              data: _this.state.countryData,\n              keyExtractor: function keyExtractor(item, index) {\n                return index.toString();\n              },\n              renderItem: function renderItem(_ref) {\n                var _lang$toLowerCase2;\n\n                var item = _ref.item;\n                return _jsx(TouchableWithoutFeedback, {\n                  onPress: function onPress() {\n                    return _this.onCountryChange(item.code);\n                  },\n                  children: _jsxs(View, {\n                    style: [styles.countryModalStyle, countryModalStyle],\n                    children: [_jsx(Text, {\n                      style: [styles.modalFlagStyle, modalFlagStyle],\n                      children: item.flag\n                    }), _jsxs(View, {\n                      style: styles.modalCountryItemContainer,\n                      children: [_jsx(Text, {\n                        style: [styles.modalCountryItemCountryNameStyle, modalCountryItemCountryNameStyle],\n                        children: item[(_lang$toLowerCase2 = lang == null ? void 0 : lang.toLowerCase()) != null ? _lang$toLowerCase2 : \"en\"]\n                      }), _jsx(Text, {\n                        style: [styles.modalCountryItemCountryDialCodeStyle, modalCountryItemCountryDialCodeStyle],\n                        children: \"  \" + item.dialCode\n                      })]\n                    })]\n                  })\n                });\n              }\n            })]\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this.hideModal();\n            },\n            style: [styles.closeButtonStyle, closeButtonStyle],\n            children: _jsx(Text, {\n              style: styles.closeTextStyle,\n              children: closeText || 'CLOSE'\n            })\n          })]\n        })\n      });\n    };\n\n    _this.renderAction = function () {\n      var renderAction = _this.props.renderAction;\n\n      if (renderAction) {\n        console.log(\"action\", renderAction);\n        if (typeof renderAction !== \"function\") throw \"The renderAction is not a function. Please set a renderAction function on there\";else return _this.props.renderAction();\n      }\n\n      return null;\n    };\n\n    var _defaultCountry = data.filter(function (obj) {\n      return obj.code === props.defaultCountry;\n    })[0] || data.filter(function (obj) {\n      return obj.code === 'TR';\n    })[0];\n\n    _this.state = {\n      defaultCountry: _defaultCountry,\n      flag: _defaultCountry.flag,\n      modalVisible: false,\n      dialCode: _defaultCountry.dialCode,\n      phoneNumber: '',\n      mask: props.mask || _defaultCountry.mask,\n      countryData: data,\n      selectedCountry: _defaultCountry,\n      placeholderTextColor: 'grey'\n    };\n    return _this;\n  }\n\n  _createClass(IntlPhoneInput, [{\n    key: \"focus\",\n    value: function focus() {\n      this.props.inputRef.current.focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var flag = this.state.flag;\n      var _this$props2 = this.props,\n          containerStyle = _this$props2.containerStyle,\n          flagStyle = _this$props2.flagStyle,\n          phoneInputStyle = _this$props2.phoneInputStyle,\n          dialCodeTextStyle = _this$props2.dialCodeTextStyle,\n          inputProps = _this$props2.inputProps,\n          placeholderTextColor = _this$props2.placeholderTextColor;\n      return _jsxs(View, {\n        style: _objectSpread(_objectSpread({}, styles.container), containerStyle),\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.showModal();\n          },\n          children: _jsxs(View, {\n            style: styles.openDialogView,\n            children: [_jsx(Text, {\n              style: [styles.flagStyle, flagStyle],\n              children: flag\n            }), _jsx(Text, {\n              style: [styles.dialCodeTextStyle, dialCodeTextStyle],\n              children: this.state.dialCode\n            })]\n          })\n        }), this.renderModal(), _jsx(TextInput, _objectSpread(_objectSpread({}, inputProps), {}, {\n          style: [styles.phoneInputStyle, phoneInputStyle],\n          placeholder: this.props.placeholder || this.state.mask.replace(/9/g, '_'),\n          autoCorrect: false,\n          keyboardType: \"number-pad\",\n          secureTextEntry: false,\n          value: this.state.phoneNumber,\n          onChangeText: this.onChangeText,\n          placeholderTextColor: placeholderTextColor\n        })), this.renderAction()]\n      });\n    }\n  }]);\n\n  return IntlPhoneInput;\n}(React.Component);\n\nexport { IntlPhoneInput as default };\nIntlPhoneInput.propTypes = {\n  lang: PropTypes.string,\n  defaultCountry: PropTypes.string,\n  mask: PropTypes.string,\n  onChangeText: PropTypes.func,\n  customModal: PropTypes.func,\n  phoneInputStyle: PropTypes.object,\n  containerStyle: PropTypes.object,\n  dialCodeTextStyle: PropTypes.object,\n  flagStyle: PropTypes.object,\n  modalContainer: PropTypes.object,\n  filterInputStyle: PropTypes.object,\n  closeButtonStyle: PropTypes.object,\n  modalCountryItemCountryNameStyle: PropTypes.object,\n  filterText: PropTypes.string,\n  closeText: PropTypes.string,\n  searchIconStyle: PropTypes.object,\n  disableCountryChange: PropTypes.bool,\n  inputRef: PropTypes.object,\n  placeholderTextColor: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  closeTextStyle: {\n    padding: 5,\n    fontSize: 20,\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  modalCountryItemCountryDialCodeStyle: {\n    fontSize: 15\n  },\n  modalCountryItemCountryNameStyle: {\n    flex: 1,\n    fontSize: 15\n  },\n  modalCountryItemContainer: {\n    flex: 1,\n    paddingLeft: 5,\n    flexDirection: 'row'\n  },\n  modalFlagStyle: {\n    fontSize: 25\n  },\n  modalContainer: {\n    paddingTop: 15,\n    paddingLeft: 25,\n    paddingRight: 25,\n    flex: 10,\n    backgroundColor: 'white'\n  },\n  flagStyle: {\n    fontSize: 35\n  },\n  dialCodeTextStyle: {},\n  countryModalStyle: {\n    flex: 1,\n    borderColor: 'black',\n    borderTopWidth: 1,\n    padding: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  openDialogView: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  filterInputStyle: {\n    flex: 1,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: '#fff',\n    color: '#424242'\n  },\n  searchIcon: {\n    padding: 10\n  },\n  filterInputStyleContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  phoneInputStyle: {\n    marginLeft: 5,\n    flex: 1\n  },\n  container: {\n    flexDirection: 'row',\n    paddingHorizontal: 12,\n    padding: 5,\n    borderRadius: 10,\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  searchIconStyle: {\n    color: 'black',\n    fontSize: 15,\n    marginLeft: 15\n  },\n  buttonStyle: {\n    alignItems: 'center',\n    padding: 14,\n    marginBottom: 10,\n    borderRadius: 3\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  countryStyle: {\n    flex: 1,\n    borderColor: 'black',\n    borderTopWidth: 1,\n    padding: 12\n  },\n  closeButtonStyle: {\n    padding: 12,\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/PC GAMING/Desktop/Kadher/boiler_plate_rn/node_modules/react-native-intl-phone-input/src/IntlPhoneInput.js"],"names":["React","PropTypes","data","IntlPhoneInput","props","onChangePropText","unmaskedPhoneNumber","phoneNumber","state","dialCode","mask","selectedCountry","countOfNumber","match","length","onChangeText","isVerified","value","join","setState","replace","index","numberPointer","isNaN","slice","showModal","disableCountryChange","modalVisible","hideModal","onCountryChange","code","countryData","filter","obj","country","flag","defaultCountry","filterCountries","lang","toLowerCase","indexOf","renderModal","customModal","countryModalStyle","modalContainer","modalFlagStyle","filterInputStyle","modalCountryItemCountryNameStyle","modalCountryItemCountryDialCodeStyle","closeText","filterText","searchIconStyle","closeButtonStyle","placeholderTextColor","flex","styles","filterInputStyleContainer","item","toString","modalCountryItemContainer","closeTextStyle","renderAction","console","log","inputRef","current","focus","containerStyle","flagStyle","phoneInputStyle","dialCodeTextStyle","inputProps","container","openDialogView","placeholder","Component","propTypes","string","func","object","bool","StyleSheet","create","padding","fontSize","color","fontWeight","paddingLeft","flexDirection","paddingTop","paddingRight","backgroundColor","borderColor","borderTopWidth","alignItems","justifyContent","paddingBottom","searchIcon","width","marginLeft","paddingHorizontal","borderRadius","buttonStyle","marginBottom","buttonText","countryStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  Modal,\n  FlatList,\n  StyleSheet,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  TouchableOpacity,\n  TextInput,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport data from './Countries';\n\nexport default class IntlPhoneInput extends React.Component {\n  constructor(props) {\n    super(props);\n    const defaultCountry = data.filter((obj) => obj.code === props.defaultCountry)[0] || data.filter((obj) => obj.code === 'TR')[0];\n    this.state = {\n      defaultCountry,\n      flag: defaultCountry.flag,\n      modalVisible: false,\n      dialCode: defaultCountry.dialCode,\n      phoneNumber: '',\n      mask: props.mask || defaultCountry.mask,\n      countryData: data,\n      selectedCountry:defaultCountry,\n      placeholderTextColor: 'grey'\n    };\n  }\n\n  onChangePropText=(unmaskedPhoneNumber, phoneNumber) => {\n    const { dialCode, mask, selectedCountry } = this.state;\n    const countOfNumber = mask.match(/9/g).length;\n    if (this.props.onChangeText) {\n      const isVerified = countOfNumber === unmaskedPhoneNumber?.length && phoneNumber?.length > 0;\n      this.props.onChangeText({\n        dialCode, unmaskedPhoneNumber, phoneNumber, isVerified,selectedCountry\n      });\n    }\n  }\n\n  onChangeText = (value) => {\n    let unmaskedPhoneNumber = (value.match(/\\d+/g) || []).join('');\n\n    if (unmaskedPhoneNumber.length === 0) {\n      this.setState({ phoneNumber: '' });\n      this.onChangePropText('', '');\n      return;\n    }\n\n\n    let phoneNumber = this.state.mask.replace(/9/g, '_');\n    for (let index = 0; index < unmaskedPhoneNumber.length; index += 1) {\n      phoneNumber = phoneNumber.replace('_', unmaskedPhoneNumber[index]);\n    }\n    let numberPointer = 0;\n    for (let index = phoneNumber.length; index > 0; index -= 1) {\n      if (phoneNumber[index] !== ' ' && !isNaN(phoneNumber[index])) {\n        numberPointer = index;\n        break;\n      }\n    }\n    phoneNumber = phoneNumber.slice(0, numberPointer + 1);\n    unmaskedPhoneNumber = (phoneNumber.match(/\\d+/g) || []).join('');\n\n    this.onChangePropText(unmaskedPhoneNumber, phoneNumber);\n    this.setState({ phoneNumber });\n  }\n\n\n  showModal = () => (this.props.disableCountryChange ? null : this.setState({ modalVisible: true }));\n\n  hideModal = () => this.setState({ modalVisible: false });\n\n  onCountryChange = async (code) => {\n    const countryData = await data;\n    try {\n      const country = await countryData.filter((obj) => obj.code === code)[0];\n      this.setState({\n        dialCode: country.dialCode,\n        flag: country.flag,\n        mask: this.props.mask || country.mask,\n        phoneNumber: '',\n        selectedCountry:country\n      });\n      this.hideModal();\n    } catch (err) {\n      const defaultCountry = this.state.defaultCountry;\n      this.setState({\n        dialCode: defaultCountry.dialCode,\n        flag: defaultCountry.flag,\n        mask: this.props.mask || defaultCountry.mask,\n        phoneNumber: '',\n        selectedCountry:defaultCountry\n      });\n    }\n  }\n\n  filterCountries = (value) => {\n   const { lang\n  } = this.props;\n    const countryData = data.filter((obj) => (obj[lang?.toLowerCase()??\"en\"]?.indexOf(value) > -1 || obj.dialCode.indexOf(value) > -1));\n    this.setState({ countryData });\n  }\n\n  focus() {\n    this.props.inputRef.current.focus();\n  }\n\n  renderModal=() => {\n    if (this.props.customModal) return this.props.customModal(this.state.modalVisible,this.state.countryData,this.onCountryChange);\n    const {\n      countryModalStyle,\n      modalContainer,\n      modalFlagStyle,\n      filterInputStyle,\n      modalCountryItemCountryNameStyle,\n      modalCountryItemCountryDialCodeStyle,\n      closeText,\n      filterText,\n      searchIconStyle,\n      closeButtonStyle,\n      lang,\n      placeholderTextColor\n    } = this.props;\n    return (\n      <Modal animationType=\"slide\" transparent={false} visible={this.state.modalVisible}>\n        <SafeAreaView style={{ flex: 1 }}>\n        <View style={[styles.modalContainer, modalContainer]}>\n          <View style={styles.filterInputStyleContainer}>\n            <TextInput autoCapitalize=\"words\" autoFocus onChangeText={this.filterCountries} placeholder={filterText || 'Filter'} style={[styles.filterInputStyle, filterInputStyle]} placeholderTextColor={placeholderTextColor }/>\n            <Text style={[styles.searchIconStyle, searchIconStyle]}>🔍</Text>\n          </View>\n          <FlatList\n            style={{ flex: 1 }}\n            data={this.state.countryData}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={\n          ({ item }) => (\n            <TouchableWithoutFeedback onPress={() => this.onCountryChange(item.code)}>\n              <View style={[styles.countryModalStyle, countryModalStyle]}>\n                <Text style={[styles.modalFlagStyle, modalFlagStyle]}>{item.flag}</Text>\n                <View style={styles.modalCountryItemContainer}>\n                  <Text style={[styles.modalCountryItemCountryNameStyle, modalCountryItemCountryNameStyle]}>{item[lang?.toLowerCase()??\"en\"]}</Text>\n                  <Text style={[styles.modalCountryItemCountryDialCodeStyle, modalCountryItemCountryDialCodeStyle]}>{`  ${item.dialCode}`}</Text>\n                </View>\n              </View>\n            </TouchableWithoutFeedback>\n          )\n        }\n          />\n        </View>\n        <TouchableOpacity onPress={() => this.hideModal()} style={[styles.closeButtonStyle, closeButtonStyle]}>\n          <Text style={styles.closeTextStyle}>{closeText || 'CLOSE'}</Text>\n        </TouchableOpacity>\n        </SafeAreaView>\n      </Modal>\n    );\n  }\n\nrenderAction=()=>{\n  const renderAction=this.props.renderAction;\n  if(renderAction) {\n    console.log(\"action\",renderAction);\n    if(typeof renderAction!==\"function\") throw (\"The renderAction is not a function. Please set a renderAction function on there\");\n    else return this.props.renderAction();\n  }\n  return null;\n}\n\n  render() {\n    const { flag } = this.state;\n    const {\n      containerStyle,\n      flagStyle,\n      phoneInputStyle,\n      dialCodeTextStyle,\n      inputProps,\n      placeholderTextColor\n    } = this.props;\n    return (\n      <View style={{ ...styles.container, ...containerStyle }}>\n        <TouchableOpacity onPress={() => this.showModal()}>\n          <View style={styles.openDialogView}>\n            <Text style={[styles.flagStyle, flagStyle]}>{flag}</Text>\n            <Text style={[styles.dialCodeTextStyle, dialCodeTextStyle]}>{this.state.dialCode}</Text>\n          </View>\n        </TouchableOpacity>\n        {this.renderModal()}\n        <TextInput\n          {...inputProps}\n          style={[styles.phoneInputStyle, phoneInputStyle]}\n          placeholder={this.props.placeholder || this.state.mask.replace(/9/g, '_')}\n          autoCorrect={false}\n          keyboardType=\"number-pad\"\n          secureTextEntry={false}\n          value={this.state.phoneNumber}\n          onChangeText={this.onChangeText}\n          placeholderTextColor={placeholderTextColor}\n        />\n        {this.renderAction()}\n\n      </View>\n\n\n    );\n  }\n}\n\nIntlPhoneInput.propTypes = {\n  lang: PropTypes.string,\n  defaultCountry: PropTypes.string,\n  mask: PropTypes.string,\n  onChangeText: PropTypes.func,\n  customModal: PropTypes.func,\n  phoneInputStyle: PropTypes.object, // {}\n  containerStyle: PropTypes.object, // {}\n  dialCodeTextStyle: PropTypes.object, // {}\n  flagStyle: PropTypes.object, // {}\n  modalContainer: PropTypes.object, // {}\n  filterInputStyle: PropTypes.object, // {}\n  closeButtonStyle: PropTypes.object, // {}\n  modalCountryItemCountryNameStyle: PropTypes.object, // {}\n  filterText: PropTypes.string,\n  closeText: PropTypes.string,\n  searchIconStyle: PropTypes.object,\n  disableCountryChange: PropTypes.bool,\n  inputRef: PropTypes.object,\n  placeholderTextColor: PropTypes.string\n};\n\nconst styles = StyleSheet.create({\n  closeTextStyle: {\n    padding: 5,\n    fontSize: 20,\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  modalCountryItemCountryDialCodeStyle: {\n    fontSize: 15\n  },\n  modalCountryItemCountryNameStyle: {\n    flex: 1,\n    fontSize: 15\n  },\n  modalCountryItemContainer: {\n    flex: 1,\n    paddingLeft: 5,\n    flexDirection: 'row'\n  },\n  modalFlagStyle: {\n    fontSize: 25,\n  },\n  modalContainer: {\n    paddingTop: 15,\n    paddingLeft: 25,\n    paddingRight: 25,\n    flex: 10,\n    backgroundColor: 'white'\n  },\n  flagStyle: {\n    fontSize: 35,\n  },\n  dialCodeTextStyle: {\n  },\n  countryModalStyle: {\n    flex: 1,\n    borderColor: 'black',\n    borderTopWidth: 1,\n    padding: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  openDialogView: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  filterInputStyle: {\n    flex: 1,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: '#fff',\n    color: '#424242',\n  },\n  searchIcon: {\n    padding: 10,\n  },\n  filterInputStyleContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  phoneInputStyle: {\n    marginLeft: 5,\n    flex: 1\n  },\n  container: {\n    flexDirection: 'row',\n    paddingHorizontal: 12,\n    padding: 5,\n    borderRadius: 10,\n    alignItems: 'center',\n    backgroundColor: 'white',\n  },\n  searchIconStyle: {\n    color: 'black',\n    fontSize: 15,\n    marginLeft: 15\n  },\n  buttonStyle: {\n    alignItems: 'center',\n    padding: 14,\n    marginBottom: 10,\n    borderRadius: 3,\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'black',\n  },\n  countryStyle: {\n    flex: 1,\n    borderColor: 'black',\n    borderTopWidth: 1,\n    padding: 12,\n  },\n  closeButtonStyle: {\n    padding: 12,\n    alignItems: 'center',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}