{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar networkChecker = function _callee() {\n  var connected;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          connected = false;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(NetInfo.fetch().then(function (state) {\n            console.log(\"Connection type\", state.type);\n            console.log(\"Is connected?\", state.isConnected);\n            connected = state.isConnected;\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", connected);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { networkChecker };","map":{"version":3,"sources":["C:/Users/PC GAMING/Desktop/Kadher/boiler_plate_rn/src/functions/network.js"],"names":["NetInfo","networkChecker","connected","fetch","then","state","console","log","type","isConnected"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,iCAApB;;;AAGA,IAAMC,cAAc,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,UAAAA,SADiB,GACL,KADK;AAAA;AAAA,2CAEfF,OAAO,CAACG,KAAR,GAAgBC,IAAhB,CAAqB,UAACC,KAAD,EAAW;AACpCC,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAAK,CAACG,IAArC;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAAK,CAACI,WAAnC;AACAP,YAAAA,SAAS,GAAGG,KAAK,CAACI,WAAlB;AAED,WALK,CAFe;;AAAA;AAAA,2CAQdP,SARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAWA,SAASD,cAAT","sourcesContent":["import NetInfo from \"@react-native-community/netinfo\";\nimport { Alert } from \"react-native\";\n\nconst networkChecker = async () => {\n  let connected = false;\n  await NetInfo.fetch().then((state) => {\n    console.log(\"Connection type\", state.type);\n    console.log(\"Is connected?\", state.isConnected);\n    connected = state.isConnected;\n    // return connected;\n  });\n  return connected;\n};\n\nexport { networkChecker };\n"]},"metadata":{},"sourceType":"module"}